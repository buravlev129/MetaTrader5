//+------------------------------------------------------------------+
//|                                           Candle info constants  |
//|                                                            B. V. |
//|                                                                  |
//+------------------------------------------------------------------+


// Размеры свечи
enum CandleDims
{
    Undefined      = 0,
    Tiny           = 1,
    Small          = 2,
    Normal         = 3,
    Large          = 4,
    Huge           = 5
};

// свечка считается Tiny, если ее size < tiny_size И body < tiny_body
// если свечка имеет размер size < tiny_size НО body > tiny_body, то это уже не Tiny, Small
// аналогично, если size > tiny_size
//

Есть три типа свечей:
- разворотные: Eskimo, Hammer, Dragonfly
- свеча продолжения: Baton, Stump, Brick если достаточно большой
- свеча остановки: Dodji, SpinBar, Brick
  можно использовать сигнал Остановка: предыдущие свечи д.б. Small/Normal, а текущая свеча остановочная. Особенно если она отскачила от уровня.
  и можно еще определять локальный флэт: если 4-6 свечей остановочные (мелкие Dodji, SpinBar, Brick)  

1) Размеры свечей. Задается два размера - size и body
   Два атрибута в классе CCandle. Энумератор один и тот же
   Раньше размеры были взяты с потолка - без привязки к тому, как это будет использоваться.
   Теперь размеры нужно согласовывать с тем, для чего они используются. Х.з. на самом деле как это сделать.
   Например, найти на графике стоп свечи. Это можно определить как Tiny/Small
   Стоп свечи никак не могут быть Normal или больше.

   Еще, похоже, что градаций нужно будет больше.
   Свеча Small, которая определяется как стоп свеча - это один размер.
   Свеча Small, которая идет как продолжение или разворотная эскимо - это может быть существенно больше по размеру.
   Такого размера свеча не может быть стоп свечой.
   Как с этим быть - Х.З.

   Более того.
   При взаимодействии свечки с линией (уровнем), направление свечи может меняться.
   Зеленая стоп свеча Tiny Brick/SpinBar, которая не взаимодействует с линией, остается бычей (is_bullish=true), независимо от того, ниже линии она или выше.
   Если эта же свеча отскочила от линии вниз (high > line && Open/Close < line), то, не смотря на то, что свеча заленая, она поменяет направление на медвежье is_bearish=true
   Потому что здесь имеет место отскок от линии вниз.
   Такие перевертыши относятся только к стоп свечам.
   Крупные свечи направление не меняют.
   Например, зеленая свеча Brick размера Small/Normal при отскоке от линии вниз (high > line && Open/Close < line) остается бычей и не рассматривается как сигнал вниз.
   И не рассматривается как сигнал вверх, потому что она находится ниже линии.

   Для таких свечей, как Eskimo, Hammer, Dragonfly направление определяется не по цвету свечи, а по направлению тени.
   Зеленое эскимо и красное эскимо с длинной нижней тенью остаются бычьими is_bullish=true
   Это направление остается постоянным, не зависимо от контекста.

1) Переделать PrepareCandleDimensions

2) Переделать DetermineCandleFigure
   Придется снова попробовать сделать ручную раскладку.
   Пропорции - рабочий вариант, но дает много неточностей. Нужно все таки руками делать. Руками контроль полный будет, но много кода.
   Пример:
   Eskimo - есть большая тень и маленькая.
   большая тень д.б. больше тела
   маленькая тень меньше 0.3 тела для свечек Tiny/Small
   Если Normal, то другая пропорция.
   Если тело меньше SmallBodySize, то это Hammer иначе Eskimo
   Если тело меньше TinyBodySize, то это уже Dragonfly или Dodji






// https://en.wikipedia.org/wiki/Candlestick_pattern
// https://bcs-express.ru/novosti-i-analitika/2017472037-50-osnovnykh-kombinatsii-iaponskikh-svechei-opredeliaemsia-s-trendami
// https://fxtrendo.com/ru/blog/363/%D0%A7%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D1%81%D0%B2%D0%B5%D1%87%D0%B0?

// Фигура свечи (односвечный патерн)
enum CandleFigure
{
    Undefined      = 0,
    Dodji          = 1,
    Dragonfly      = 2,
    SpinBar        = 3,   // Небольшое тело и длинные тени
    Hammer         = 4,
    Eskimo         = 5,
    Brick          = 6,
    Baton          = 7,
    Stump          = 8,   // Произвольная свечка, которая никуда не попадает
    XxxBar         = 9,
    YyyBar         = 10,
};


// Свечной патерн (две и более свечи)
enum CandlePattern
{
    Undefined      = 0,
    Engulfment     = 1,
    BearishHarami  = 2,
    BullishHarami  = 3,

};
